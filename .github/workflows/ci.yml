name: CI

on:
  push:
    branches:
      - master
    tags:
      - '*'

jobs:
  test-api:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Test
        run: docker-compose -f $GITHUB_WORKSPACE/zoonavigator-api/docker-compose.test.yml up --exit-code-from=sut

  test-web:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Test
        run: docker-compose -f $GITHUB_WORKSPACE/zoonavigator-web/docker-compose.test.yml up --exit-code-from=sut

  build-metadata:
    runs-on: ubuntu-latest

    steps:
      - name: Get version
        id: get_version
        uses: battila7/get-version-action@v2

      - name: Build metadata
        run: |
          TAG="${{ steps.get_version.outputs.version-without-v }}"

          # is this a semver release?
          if [[ "${TAG}" =~ ^[0-9]+(\.[0-9]+){2,3}$ ]];
          then
              APP_VERSION="${TAG}"
              SNAP_CHANNEL="candidate"
              DOCKER_TAG="${TAG}"
              DOCS_URL="https://zoonavigator.elkozmon.com/en/${TAG}"
          else
              APP_VERSION="latest-${GITHUB_SHA::12}"
              SNAP_CHANNEL="edge"
              DOCKER_TAG="unstable"
              DOCS_URL="https://zoonavigator.elkozmon.com/en/latest"
          fi

          # set image name
          DOCKER_IMAGE="elkozmon/zoonavigator"

          echo "" > metadata.env
          echo "APP_VERSION=${APP_VERSION}" >> metadata.env
          echo "DOCKER_TAG=${DOCKER_TAG}" >> metadata.env
          echo "DOCKER_IMAGE=${DOCKER_IMAGE}" >> metadata.env
          echo "SNAP_CHANNEL=${SNAP_CHANNEL}" >> metadata.env
          echo "DOCS_URL=${DOCS_URL}" >> metadata.env

      - name: Upload metadata
        uses: actions/upload-artifact@v1
        with:
          name: metadata
          path: metadata.env

  build-docker:
    runs-on: ubuntu-latest

    needs:
      - build-metadata

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Download metadata
        uses: actions/download-artifact@v1
        with:
          name: metadata

      - name: Build Docker image
        run: |
          source metadata/metadata.env

          docker build \
            --build-arg APP_VERSION=$APP_VERSION \
            --build-arg DOCS_URL=$DOCS_URL \
            --build-arg VCS_REF=$(git rev-parse --short HEAD) \
            --build-arg BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ") \
            -t ${DOCKER_IMAGE}:${DOCKER_TAG} \
            -f build/docker/Dockerfile \
            .

          docker save ${DOCKER_IMAGE}:${DOCKER_TAG} \
            > dockerimage.tar

      - name: Package jars
        run: |
          source metadata/metadata.env

          mkdir out
          id=$(docker create ${DOCKER_IMAGE}:${DOCKER_TAG})
          docker cp $id:/app/lib out/lib
          docker cp $id:/app/extra out/extra
          docker rm $id

          tar -cvzf jars.tar.gz out
          rm -rf out

      - name: Upload jars
        uses: actions/upload-artifact@v1
        with:
          name: jars
          path: jars.tar.gz

      - name: Upload Docker image
        uses: actions/upload-artifact@v1
        with:
          name: dockerimage
          path: dockerimage.tar

  build-snap:
    runs-on: ubuntu-latest

    needs:
      - build-docker
      - build-metadata

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download jars
        uses: actions/download-artifact@v1
        with:
          name: jars

      - name: Download metadata
        uses: actions/download-artifact@v1
        with:
          name: metadata

      - name: Install Snapcraft
        uses: samuelmeuli/action-snapcraft@v1
        with:
          use_lxd: true

      - name: Snap Build
        run: |
          source metadata/metadata.env

          echo "$APP_VERSION" \
            > ${GITHUB_WORKSPACE}/build/snap/local/version

          tar \
            -xvf ${GITHUB_WORKSPACE}/jars/jars.tar.gz \
            -C ${GITHUB_WORKSPACE}/build/snap/local \
            --strip 1

          cd ${GITHUB_WORKSPACE}/build
          sg lxd -c 'snapcraft snap --use-lxd -o zoonavigator_amd64.snap'

      - name: Upload Snap
        uses: actions/upload-artifact@v1
        with:
          name: snap
          path: build/zoonavigator_amd64.snap

  publish-docker:
    runs-on: ubuntu-latest

    needs:
      - test-api
      - test-web
      - build-docker
      - build-metadata

    steps:
      - name: Download metadata
        uses: actions/download-artifact@v1
        with:
          name: metadata

      - name: Download Docker image
        uses: actions/download-artifact@v1
        with:
          name: dockerimage

      - name: Docker Load
        run: docker load --input dockerimage/dockerimage.tar

      - name: Docker Login
        uses: azure/docker-login@v1
        with:
          username: ${{ secrets.DOCKERIO_USERNAME }}
          password: ${{ secrets.DOCKERIO_PASSWORD }}

      - name: Docker Push
        run: |
          source metadata/metadata.env

          # tag stable version as latest
          if [ "${DOCKER_TAG}" != "unstable" ]
          then
            docker tag "${DOCKER_IMAGE}:${DOCKER_TAG}" "${DOCKER_IMAGE}:latest"
          fi

          docker push ${DOCKER_IMAGE}

      - name: Microbadger webhook
        uses: muinmomin/webhook-action@v1.0.0
        with:
          url: ${{ secrets.MICROBADGER_WEBHOOK_URL }}

  publish-snap:
    runs-on: ubuntu-latest

    needs:
      - test-api
      - test-web
      - build-snap
      - build-metadata

    steps:
      - name: Download metadata
        uses: actions/download-artifact@v1
        with:
          name: metadata

      - name: Download Snap
        uses: actions/download-artifact@v1
        with:
          name: snap

      - name: Install Snapcraft
        uses: samuelmeuli/action-snapcraft@v1
        with:
          snapcraft_token: ${{ secrets.SNAPCRAFT_TOKEN }}

      - name: Snap Push
        run: |
          source metadata/metadata.env

          snapcraft upload --release=$SNAP_CHANNEL snap/zoonavigator_amd64.snap

  cleanup:
    runs-on: ubuntu-latest

    needs:
      - publish-docker
      - publish-snap

    if: ${{ always() }}

    steps:
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v1
        with:
          failOnError: false
          name: |
            jars
            snap
            dockerimage
            metadata
