#!/usr/bin/env bash

###  ------------------------------- ###
###  Helper methods                  ###
###  ------------------------------- ###

realpath () {
(
  TARGET_FILE="$1"

  cd "$(dirname "$TARGET_FILE")"
  TARGET_FILE=$(basename "$TARGET_FILE")

  COUNT=0
  while [ -L "$TARGET_FILE" -a $COUNT -lt 100 ]
  do
      TARGET_FILE=$(readlink "$TARGET_FILE")
      cd "$(dirname "$TARGET_FILE")"
      TARGET_FILE=$(basename "$TARGET_FILE")
      COUNT=$(($COUNT + 1))
  done

  if [ "$TARGET_FILE" == "." -o "$TARGET_FILE" == ".." ]; then
    cd "$TARGET_FILE"
    TARGET_FILEPATH=
  else
    TARGET_FILEPATH=/$TARGET_FILE
  fi

  echo "$(pwd -P)/$TARGET_FILE"
)
}

###  ------------------------------- ###
###  Configuration                   ###
###  ------------------------------- ###

declare -r real_script_path="$(realpath "$0")"
declare -r bin_dir="$(realpath "$(dirname "$real_script_path")")"
declare -r lib_dir="$(realpath "${bin_dir}/../lib")"
declare -r cfg_dir="$(realpath "${bin_dir}/../conf")"
declare -r ext_dir="$(realpath "${bin_dir}/../extra")"

# Generate random app secret if not defined
export SECRET_KEY=${SECRET_KEY:-$(cat /dev/urandom | tr -dc 'a-zA-Z0-9~!@#$%^&*_-' | fold -w 64 | head -n 1)}

# Print warning about missing configuration
[ -n "$DATA_DIR" ] && >&2 echo "Warning: missing $DATA_DIR env variable.\n" && exit 1

# Print warning about out-dated configuration
[ -n "$AUTO_CONNECT_CONNECTION_STRING" ] && >&2 echo "Warning: detected usage of out-dated Auto Connect configuration.\nPlease see {{ .Env.DOCS_URL }}/docker/autoconnect.html for more info.\n"

# Config
ZOOKEEPER_34="true"
ZOOKEEPER_34_JAR="zookeeper-3.4.11.jar"
ZOOKEEPER_35_JAR="zookeeper-3.5.6.jar"

JAVA_OPTS="$JAVA_OPTS \
  -XX:+UseContainerSupport \
  -server \
  -Dpidfile.path=${DATA_DIR}/RUNNING_PID \
  -Dzookeeper.kinit=/usr/bin/kinit \
  -Dplay.http.context={{ .Env.BASE_HREF }} \
  -Dplay.assets.path=/public \
  -Dplay.assets.urlPrefix=/"

[ -n "$HTTP_PORT" ] && JAVA_OPTS="$JAVA_OPTS -Dplay.server.http.port=$HTTP_PORT"
[ -n "$HTTPS_PORT" ] && JAVA_OPTS="$JAVA_OPTS -Dplay.server.https.port=$HTTPS_PORT"
[ -n "$SSL_KEYSTORE_PATH" ] && JAVA_OPTS="$JAVA_OPTS -Dplay.server.https.keyStore.path=$SSL_KEYSTORE_PATH"
[ -n "$SSL_KEYSTORE_PASSWORD" ] && JAVA_OPTS="$JAVA_OPTS -Dplay.server.https.keyStore.password=$SSL_KEYSTORE_PASSWORD"
[ -n "$SSL_KEYSTORE_TYPE" ] && JAVA_OPTS="$JAVA_OPTS -Dplay.server.https.keyStore.type=$SSL_KEYSTORE_TYPE"
[ -n "$SECRET_KEY" ] && JAVA_OPTS="$JAVA_OPTS -Dplay.http.secret.key=$SECRET_KEY"

[ -n "$JAVA_XMS" ] && JAVA_OPTS="$JAVA_OPTS -Xms$JAVA_XMS"
[ -n "$JAVA_XMX" ] && JAVA_OPTS="$JAVA_OPTS -Xmx$JAVA_XMX"

[ -n "$JAVA_JAAS_LOGIN_CONFIG" ] && JAVA_OPTS="$JAVA_OPTS -Djava.security.auth.login.config=$JAVA_JAAS_LOGIN_CONFIG"

[ -n "$JAVA_KRB5_DEBUG" ] && JAVA_OPTS="$JAVA_OPTS -Dsun.security.krb5.debug=$JAVA_KRB5_DEBUG"
[ -n "$JAVA_KRB5_REALM" ] && JAVA_OPTS="$JAVA_OPTS -Djava.security.krb5.realm=$JAVA_KRB5_REALM"
[ -n "$JAVA_KRB5_KDC" ] && JAVA_OPTS="$JAVA_OPTS -Djava.security.krb5.kdc=$JAVA_KRB5_KDC"

[ -n "$ZK_CLIENT_TIMEOUT_MILLIS" ] && JAVA_OPTS="$JAVA_OPTS -Dzookeeper.client.maxAge=$ZK_CLIENT_TIMEOUT_MILLIS"
[ -n "$ZK_CONNECT_TIMEOUT_MILLIS" ] && JAVA_OPTS="$JAVA_OPTS -Dzookeeper.client.connectTimeout=$ZK_CONNECT_TIMEOUT_MILLIS"
[ -n "$ZK_SASL_CLIENT" ] && JAVA_OPTS="$JAVA_OPTS -Dzookeeper.sasl.client=$ZK_SASL_CLIENT"
[ -n "$ZK_SASL_CLIENT_CONFIG" ] && JAVA_OPTS="$JAVA_OPTS -Dzookeeper.sasl.clientconfig=$ZK_SASL_CLIENT_CONFIG"
[ -n "$ZK_SASL_CLIENT_USERNAME" ] && JAVA_OPTS="$JAVA_OPTS -Dzookeeper.sasl.client.username=$ZK_SASL_CLIENT_USERNAME"
[ -n "$ZK_SERVER_REALM" ] && JAVA_OPTS="$JAVA_OPTS -Dzookeeper.server.realm=$ZK_SERVER_REALM"
[ -n "$ZK_CLIENT_SECURE" ] && JAVA_OPTS="$JAVA_OPTS -Dzookeeper.client.secure=$ZK_CLIENT_SECURE"
[ -n "$ZK_CLIENT_CNXN_SOCKET" ] && JAVA_OPTS="$JAVA_OPTS -Dzookeeper.clientCnxnSocket=$ZK_CLIENT_CNXN_SOCKET"
[ -n "$ZK_SSL_KEYSTORE_PATH" ] && JAVA_OPTS="$JAVA_OPTS -Dzookeeper.ssl.keyStore.location=$ZK_SSL_KEYSTORE_PATH"
[ -n "$ZK_SSL_KEYSTORE_PASSWORD" ] && JAVA_OPTS="$JAVA_OPTS -Dzookeeper.ssl.keyStore.password=$ZK_SSL_KEYSTORE_PASSWORD"
[ -n "$ZK_SSL_TRUSTSTORE_PATH" ] && JAVA_OPTS="$JAVA_OPTS -Dzookeeper.ssl.trustStore.location=$ZK_SSL_TRUSTSTORE_PATH"
[ -n "$ZK_SSL_TRUSTSTORE_PASSWORD" ] && JAVA_OPTS="$JAVA_OPTS -Dzookeeper.ssl.trustStore.password=$ZK_SSL_TRUSTSTORE_PASSWORD"

# Infer ZooKeeper version
if [ -n "$ZK_CLIENT_SECURE" ] || [ "$ZK_CLIENT_CNXN_SOCKET" = "org.apache.zookeeper.ClientCnxnSocketNetty" ]
then
  ZOOKEEPER_34="false"
fi

###  ------------------------------- ###
###  Main script                     ###
###  ------------------------------- ###

# Exit if command fails
set -e

# Assert data dir exists
mkdir -p ${DATA_DIR}

# Remove pid file
rm -f ${DATA_DIR}/RUNNING_PID

if [ "$ZOOKEEPER_34" = "true" ]
then
  ZOOKEEPER_JAR=$ZOOKEEPER_34_JAR
else
  ZOOKEEPER_JAR=$ZOOKEEPER_35_JAR
fi

# Generate application config
$bin_dir/zoonavigator.conf.sh > $DATA_DIR/application.conf

# Start application
exec java \
  ${JAVA_OPTS} \
  -cp "$lib_dir:$cfg_dir:$DATA_DIR/application.conf:$ext_dir/$ZOOKEEPER_JAR" \
  play.core.server.ProdServerStart
